const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { getUser } = require('../../utils/database');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('balance')
    .setDescription('Verifica seu saldo de moedas')
    .addUserOption(option =>
      option.setName('usuario')
        .setDescription('Usu√°rio para verificar o saldo (opcional)')
        .setRequired(false)),
  
  async execute(interaction) {
    // Verificar se o sistema de economia est√° ativado
    if (!interaction.client.config.economy || !interaction.client.config.economy.enabled) {
      return interaction.reply({
        content: '‚ùå O sistema de economia est√° desativado neste servidor.',
        ephemeral: true
      });
    }
    
    // Determinar qual usu√°rio verificar
    const targetUser = interaction.options.getUser('usuario') || interaction.user;
    
    try {
      // Buscar dados do usu√°rio
      const userData = await getUser(targetUser.id, interaction.guild.id);
      
      if (!userData) {
        return interaction.reply({
          content: `‚ùå N√£o foi poss√≠vel obter as informa√ß√µes ${targetUser.id === interaction.user.id ? 'suas' : 'deste usu√°rio'}.`,
          ephemeral: true
        });
      }
      
      // Criar embed para resposta
      const embed = new EmbedBuilder()
        .setColor('#4169E1')
        .setTitle(`üí∞ Saldo de ${targetUser.username}`)
        .setThumbnail(targetUser.displayAvatarURL({ dynamic: true }))
        .addFields(
          { name: 'Moedas', value: `${userData.coins || 0}`, inline: true },
          { name: 'N√≠vel', value: `${userData.level || 1}`, inline: true },
          { name: 'XP', value: `${userData.xp || 0}/${userData.level * interaction.client.config.xpLevelMultiplier || 100}`, inline: true }
        )
        .setFooter({ text: `ID: ${targetUser.id}` })
        .setTimestamp();
      
      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('Erro ao processar comando balance:', error);
      await interaction.reply({
        content: '‚ùå Ocorreu um erro ao processar seu comando. Tente novamente mais tarde.',
        ephemeral: true
      });
    }
  },
};